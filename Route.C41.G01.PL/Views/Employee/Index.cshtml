@model IEnumerable<EmployeeViewModel>
@{
    ViewData["Title"] = "Index";
}

@* @* <div class="alert alert-warning">
    @ViewData["Message"]
</div>
 *@
@* <div class="alert alert-success">
    @ViewBag.Message
</div>
 *@
@* <div class="alert alert-warning">
    @ViewData["Message"]
</div>
 *@

@* @{
    string ViewDataMSG = ViewData["Message"] as string; // Enforce Type Safety -> Requires Type Convertion => [ Strongly Type Language ]

    string ViewBagMSG = ViewBag.Message; // Cant't Enforce Type Safety -> Not Require Type Convertion
}
 *@
@* 
@if (!string.IsNullOrEmpty(TempData["Message"] as string))
{
    <div class="alert alert-success">
        @TempData["Message"]
    </div>
}

 *@


<h1>All Employees</h1>

<br />
<br />




<a asp-controller="Employee" asp-action="Create" class="btn btn-primary">Create New Employee</a>

<br />


<div class="row justify-content-center align-items-center mt-5">

    <form class="row col-8 offset-1" asp-action="Index">

        <div class="col-8">
            <input type="text" class="form-control" name="searchInp" id="searchInp" placeholder="Search By Name"/>
        </div>

        <div class="col-4">
            <input type="submit" value="Search" class="btn btn-success"/>
        </div>

    </form>

</div>

@if (Model.Count() > 0)
{
    <table class="mt-4 table table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(E => E.Image)</th>
                <th>@Html.DisplayNameFor(E => E.Name)</th>
                <th>@Html.DisplayNameFor(E => E.Age)</th>
                <th>@Html.DisplayNameFor(E => E.Salary)</th>
                <th>@Html.DisplayNameFor(E => E.IsActive)</th>
                <th>@Html.DisplayNameFor(E => E.Gender)</th>
                <th>@Html.DisplayNameFor(E => E.Email)</th> 
                <th>@Html.DisplayNameFor(E => E.Department)</th> 
                @* <th>@Html.DisplayNameFor(E => E.HiringDate)</th> *@

                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>

        <tbody>
            @foreach (var employee in Model)
            {
                <tr>
                    <td>
                        <img src="~/files/images/@employee.ImageName" alt="Employee Image" class="img-fluid rounded-circle" width="75" />

                    </td>
                    <td>@employee.Name</td>
                    <td>@employee.Age</td>
                    <td>@Html.DisplayFor(M => employee.Salary)</td>
                    <td>@Html.DisplayFor(M => employee.IsActive)</td>
                    <td>@employee.Gender</td>
                    <td>@Html.DisplayFor(M => employee.Email)</td>
                    @* <td>@Html.DisplayFor(M => employee.Department.Name)</td> *@
                    <td>@employee.Department?.Name</td>


                    <partial name="_ButtonPartial" model="@employee.Id" />

                </tr>
            }

        </tbody>

    </table>
}
else
{
    <div class="mt-4 alert alert-warning">
        <h3>There Is No Employees :(</h3>
    </div>
}

